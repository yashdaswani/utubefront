{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\utube\\\\client\\\\src\\\\components\\\\Upload\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { Input } from \"@mui/material\";\nimport React from \"react\";\nimport \"./Upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = _ref => {\n  _s();\n  let {\n    setOpen\n  } = _ref;\n  const [img, setImg] = useState(undefined);\n  const [video, setVideo] = useState(undefined);\n  const [imgPerc, setImgPerc] = useState(0);\n  const [videoPerc, setVideoPerc] = useState(0);\n  const [inputs, setInputs] = useState({});\n  const [tags, setTags] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload_con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => setOpen(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"upload_title\",\n        children: \"Upload a new video \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Video : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        type: \"file\",\n        accept: \"video/\",\n        onChange: e => setVideo(e.targer.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"upload_input\",\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"title\"\n        //   onChange={handleChange}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        placeholder: \"Description\",\n        name: \"desc\",\n        rows: 8\n        //   {/* onChange={handleChange} */}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        type: \"text\",\n        placeholder: \"Separate the tags with commas.\"\n        //   onChance={handleTags}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Image : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        type: \"file\",\n        accept: \"image/*\"\n        // onChange={(e) => setImg(e.target.files[0])}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uplaod_button\"\n        //    onClick={handleUpload}\n        ,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"U0tpbJxCE+plLluniINvPM/yrJE=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["Input","React","Upload","setOpen","img","setImg","useState","undefined","video","setVideo","imgPerc","setImgPerc","videoPerc","setVideoPerc","inputs","setInputs","tags","setTags","e","targer","files"],"sources":["D:/git/utube/client/src/components/Upload/Upload.js"],"sourcesContent":["import { Input } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport \"./Upload.css\";\r\n\r\nconst Upload = ({ setOpen }) => {\r\n  const [img, setImg] = useState(undefined);\r\n  const [video, setVideo] = useState(undefined);\r\n  const [imgPerc, setImgPerc] = useState(0);\r\n  const [videoPerc, setVideoPerc] = useState(0);\r\n  const [inputs, setInputs] = useState({});\r\n  const [tags, setTags] = useState([]);\r\n  return (\r\n    <div className=\"upload_con\">\r\n      <div className=\"upload_wrapper\">\r\n        <div className=\"close\" onClick={() => setOpen(false)}>\r\n          X\r\n        </div>\r\n        <h1 className=\"upload_title\">Upload a new video </h1>\r\n        <label className=\"label\">Video : </label>\r\n        <Input className=\"desc\" type=\"file\" accept=\"video/\" onChange={e=>setVideo(e.targer.files[0])}></Input>\r\n        <Input\r\n          className=\"upload_input\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          name=\"title\"\r\n          //   onChange={handleChange}\r\n        />\r\n        <Input\r\n          className=\"desc\"\r\n          placeholder=\"Description\"\r\n          name=\"desc\"\r\n          rows={8}\r\n          //   {/* onChange={handleChange} */}\r\n        />\r\n        <Input\r\n          className=\"desc\"\r\n          type=\"text\"\r\n          placeholder=\"Separate the tags with commas.\"\r\n          //   onChance={handleTags}\r\n        />\r\n        <label className=\"label\">Image : </label>\r\n        <Input\r\n          className=\"desc\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          // onChange={(e) => setImg(e.target.files[0])}\r\n        />\r\n        <button\r\n          className=\"uplaod_button\"\r\n          //    onClick={handleUpload}\r\n        >\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,eAAe;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC;AAEtB,MAAMC,MAAM,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACzB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGC,QAAQ,CAACC,SAAS,CAAC;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAACC,SAAS,CAAC;EAC7C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAK,SAAS,EAAC,OAAO;QAAC,OAAO,EAAE,MAAMH,OAAO,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/C,eACN;QAAI,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACrD;QAAO,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACzC,QAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,MAAM,EAAC,QAAQ;QAAC,QAAQ,EAAEe,CAAC,IAAET,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eACtG,QAAC,KAAK;QACJ,SAAS,EAAC,cAAc;QACxB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,OAAO;QACnB,IAAI,EAAC;QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACF,QAAC,KAAK;QACJ,SAAS,EAAC,MAAM;QAChB,WAAW,EAAC,aAAa;QACzB,IAAI,EAAC,MAAM;QACX,IAAI,EAAE;QACN;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACF,QAAC,KAAK;QACJ,SAAS,EAAC,MAAM;QAChB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;QACZ;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACF;QAAO,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACzC,QAAC,KAAK;QACJ,SAAS,EAAC,MAAM;QAChB,IAAI,EAAC,MAAM;QACX,MAAM,EAAC;QACP;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACF;QACE,SAAS,EAAC;QACV;QAAA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGO;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GApDIlB,MAAM;AAAA,KAANA,MAAM;AAsDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}