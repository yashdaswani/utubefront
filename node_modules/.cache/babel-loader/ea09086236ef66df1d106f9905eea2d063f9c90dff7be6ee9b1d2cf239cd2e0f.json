{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\utube\\\\client\\\\src\\\\components\\\\Upload\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { Input } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport \"./Upload.css\";\nimport app from \"../../firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = _ref => {\n  _s();\n  let {\n    setOpen\n  } = _ref;\n  const [img, setImg] = useState(undefined);\n  const [video, setVideo] = useState(undefined);\n  const [imgPerc, setImgPerc] = useState(0);\n  const [videoPerc, setVideoPerc] = useState(0);\n  const [inputs, setInputs] = useState({});\n  const [tags, setTags] = useState([]);\n  const handleChange = e => {\n    setInputs(prev => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n  const handleTags = e => {\n    setTags(e.target.value.split(\",\"));\n  };\n  const uploadFile = (file, urlType) => {\n    const storage = getStorage(app);\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = ref(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      urlType === \"imgUrl\" ? setImgPerc(Math.round(progress)) : setVideoPerc(Math.round(progress));\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n        case 'running':\n          console.log('Upload is running');\n          break;\n        default:\n          break;\n      }\n    }, error => {\n      // Handle unsuccessful uploads\n    }, () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setInputs(prev => {\n          return {\n            ...prev,\n            [urlType]: downloadURL\n          };\n        });\n      });\n    });\n  };\n  useEffect(() => {\n    video && uploadFile(video, \"videoUrl\");\n  }, [video]);\n  useEffect(() => {\n    img && uploadFile(img, \"imgUrl\");\n  }, [img]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload_con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => setOpen(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"upload_title\",\n        children: \"Upload a new video \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Video : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), videoPerc > 0 ? \"Uploading:\" + videoPerc : /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        type: \"file\",\n        accept: \"video/\",\n        onChange: e => setVideo(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"upload_input\",\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"title\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        placeholder: \"Description\",\n        name: \"desc\",\n        rows: 8,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        type: \"text\",\n        placeholder: \"Separate the tags with commas.\",\n        onChance: handleTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Image : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), imgPerc > 0 ? \"Uploading:\" + imgPerc + \"%\" : /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uplaod_button\"\n        //    onClick={handleUpload}\n        ,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"MdtYlcVMp4MsEhMkZUUvb8VSr/g=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["Input","React","useEffect","useState","getStorage","ref","uploadBytesResumable","getDownloadURL","app","Upload","setOpen","img","setImg","undefined","video","setVideo","imgPerc","setImgPerc","videoPerc","setVideoPerc","inputs","setInputs","tags","setTags","handleChange","e","prev","target","name","value","handleTags","split","uploadFile","file","urlType","storage","fileName","Date","getTime","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","state","console","log","error","then","downloadURL","files"],"sources":["D:/git/utube/client/src/components/Upload/Upload.js"],"sourcesContent":["import { Input } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport \"./Upload.css\";\r\nimport app from \"../../firebase.js\"\r\n\r\nconst Upload = ({ setOpen }) => {\r\n  const [img, setImg] = useState(undefined);\r\n  const [video, setVideo] = useState(undefined);\r\n  const [imgPerc, setImgPerc] = useState(0);\r\n  const [videoPerc, setVideoPerc] = useState(0);\r\n  const [inputs, setInputs] = useState({});\r\n  const [tags, setTags] = useState([]);\r\n  const handleChange = (e)=>{\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  }\r\n  const handleTags = (e)=>{\r\n    setTags(e.target.value.split(\",\"));\r\n  }\r\n\r\n\r\n  const uploadFile = (file,urlType) =>{\r\n    const storage = getStorage(app);\r\n    const fileName = new Date().getTime() + file.name;\r\n    const storageRef = ref(storage, fileName);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n    uploadTask.on('state_changed', \r\n  (snapshot) => {\r\n    // Observe state change events such as progress, pause, and resume\r\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    urlType === \"imgUrl\" ? setImgPerc(Math.round(progress)) : setVideoPerc(Math.round(progress));\r\n    switch (snapshot.state) {\r\n      case 'paused':\r\n        console.log('Upload is paused');\r\n        break;\r\n      case 'running':\r\n        console.log('Upload is running');\r\n        break;\r\n        default:\r\n          break;\r\n    }\r\n  }, \r\n  (error) => {\r\n    // Handle unsuccessful uploads\r\n  }, \r\n  () => {\r\n    // Handle successful uploads on complete\r\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n      setInputs((prev) => {\r\n        return { ...prev, [urlType]: downloadURL };\r\n      });\r\n    });\r\n  }\r\n);\r\n  }\r\n\r\n  useEffect(() => {\r\n    video && uploadFile(video , \"videoUrl\");\r\n  }, [video]);\r\n\r\n  useEffect(() => {\r\n    img && uploadFile(img, \"imgUrl\");\r\n  }, [img]);\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"upload_con\">\r\n      <div className=\"upload_wrapper\">\r\n        <div className=\"close\" onClick={() => setOpen(false)}>\r\n          X\r\n        </div>\r\n        <h1 className=\"upload_title\">Upload a new video </h1>\r\n        <label className=\"label\">Video : </label>\r\n        {videoPerc > 0 ? (\r\n          \"Uploading:\" + videoPerc\r\n        ) : (\r\n        <Input className=\"desc\" type=\"file\" accept=\"video/\" onChange={e=>setVideo(e.target.files[0])}></Input> )}\r\n        <Input\r\n          className=\"upload_input\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          name=\"title\"\r\n            onChange={handleChange}\r\n        />\r\n        <Input\r\n          className=\"desc\"\r\n          placeholder=\"Description\"\r\n          name=\"desc\"\r\n          rows={8}\r\n           onChange={handleChange} \r\n        />\r\n        <Input\r\n          className=\"desc\"\r\n          type=\"text\"\r\n          placeholder=\"Separate the tags with commas.\"\r\n            onChance={handleTags}\r\n        />\r\n        <label className=\"label\">Image : </label>\r\n        {imgPerc > 0 ? (\r\n          \"Uploading:\" + imgPerc + \"%\"\r\n        ) : (\r\n        <Input\r\n          className=\"desc\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => setImg(e.target.files[0])}\r\n        />  )}\r\n        <button\r\n          className=\"uplaod_button\"\r\n          //    onClick={handleUpload}\r\n        >\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}