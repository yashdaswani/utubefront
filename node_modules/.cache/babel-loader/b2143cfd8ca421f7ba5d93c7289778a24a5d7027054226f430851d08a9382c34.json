{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\utube\\\\client\\\\src\\\\components\\\\Upload\\\\Upload.js\";\nimport { Input } from '@mui/material';\nimport React from 'react';\nimport \"./Upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = _ref => {\n  let {\n    setOpen\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload_con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => setOpen(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"upload_title\",\n        children: \"Upload a new video \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Video : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        accept: \"video/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"upload_input\",\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"title\"\n        //   onChange={handleChange}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"desc\",\n        placeholder: \"Description\",\n        name: \"desc\",\n        rows: 5\n        //   {/* onChange={handleChange} */}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Separate the tags with commas.\"\n        //   onChance={handleTags}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Image : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        accept: \"image/*\"\n        // onChange={(e) => setImg(e.target.files[0])}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uplaod_button\"\n        //    onClick={handleUpload}\n        ,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["Input","React","Upload","setOpen"],"sources":["D:/git/utube/client/src/components/Upload/Upload.js"],"sourcesContent":["import { Input } from '@mui/material'\r\nimport React from 'react'\r\nimport \"./Upload.css\"\r\n\r\nconst Upload = ({setOpen}) => {\r\n  return (\r\n    <div className='upload_con'>\r\n      <div className='upload_wrapper'>\r\n        <div className='close' onClick={()=>setOpen(false)}>X</div>\r\n        <h1 className='upload_title'>Upload a new video </h1>\r\n        <label className='label'>Video : </label>\r\n        <Input type='file' accept=\"video/\"></Input>\r\n        <Input className='upload_input'\r\n        type=\"text\"\r\n          placeholder=\"Title\"\r\n          name=\"title\"\r\n        //   onChange={handleChange}\r\n        />\r\n        <Input  className='desc'\r\n          placeholder=\"Description\"\r\n          name=\"desc\"\r\n          rows={5}\r\n        //   {/* onChange={handleChange} */}\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Separate the tags with commas.\"\r\n        //   onChance={handleTags}\r\n        />\r\n        <label className='label'>Image : </label>\r\n        <Input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            // onChange={(e) => setImg(e.target.files[0])}\r\n          />\r\n           <button className=\"uplaod_button\" \r\n        //    onClick={handleUpload}\r\n           >Upload</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Upload\r\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,eAAe;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAA;AAErB,MAAMC,MAAM,GAAG,QAAe;EAAA,IAAd;IAACC;EAAO,CAAC;EACvB,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAK,SAAS,EAAC,OAAO;QAAC,OAAO,EAAE,MAAIA,OAAO,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC3D;QAAI,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACrD;QAAO,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACzC,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,MAAM,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3C,QAAC,KAAK;QAAC,SAAS,EAAC,cAAc;QAC/B,IAAI,EAAC,MAAM;QACT,WAAW,EAAC,OAAO;QACnB,IAAI,EAAC;QACP;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACF,QAAC,KAAK;QAAE,SAAS,EAAC,MAAM;QACtB,WAAW,EAAC,aAAa;QACzB,IAAI,EAAC,MAAM;QACX,IAAI,EAAE;QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACF,QAAC,KAAK;QACJ,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;QACd;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACF;QAAO,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACzC,QAAC,KAAK;QACF,IAAI,EAAC,MAAM;QACX,MAAM,EAAC;QACP;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACD;QAAQ,SAAS,EAAC;QACrB;QAAA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACmB;IAAA;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KArCKD,MAAM;AAuCZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}