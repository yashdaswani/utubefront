{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\n// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\n// The reasons for going with `requestAnimationFrame()`:\n// * `requestAnimationFrame` won't be called when a tab is in background.\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\n// `requestAnimationFrame()` polyfill for old browsers.\nimport requestAnimationFrame from 'raf';\nimport binarySearch from './helpers/binarySearch.js';\nexport default {\n  instances: [],\n  add: function add(instance) {\n    var _this = this;\n    var wasIdle = this.instances.length === 0;\n    _add(this.instances, instance);\n    if (wasIdle) {\n      this.start();\n    }\n    return {\n      stop: function stop() {\n        remove(_this.instances, instance);\n        if (_this.instances.length === 0) {\n          _this.stop();\n        }\n      },\n      forceUpdate: function forceUpdate() {\n        updateInstance(instance, _this.instances);\n      }\n    };\n  },\n  tick: function tick() {\n    var now = Date.now();\n    while (true) {\n      var instance = this.instances[0];\n      if (now >= instance.nextUpdateTime) {\n        updateInstance(instance, this.instances);\n      } else {\n        break;\n      }\n    }\n  },\n  scheduleNextTick: function scheduleNextTick() {\n    var _this2 = this;\n    this.scheduledTick = requestAnimationFrame(function () {\n      _this2.tick();\n      _this2.scheduleNextTick();\n    });\n  },\n  start: function start() {\n    this.scheduleNextTick();\n  },\n  stop: function stop() {\n    requestAnimationFrame.cancel(this.scheduledTick);\n  }\n};\nfunction _updateInstance(instance) {\n  var _instance$getNextValu = instance.getNextValue(),\n    _instance$getNextValu2 = _slicedToArray(_instance$getNextValu, 2),\n    value = _instance$getNextValu2[0],\n    nextUpdateTime = _instance$getNextValu2[1];\n  instance.setValue(value);\n  instance.nextUpdateTime = nextUpdateTime;\n}\nfunction updateInstance(instance, instances) {\n  _updateInstance(instance);\n  remove(instances, instance);\n  _add(instances, instance);\n}\nfunction _add(instances, instance) {\n  var i = findTargetIndex(instances, instance);\n  instances.splice(i, 0, instance);\n}\nfunction remove(instances, instance) {\n  var i = instances.indexOf(instance);\n  instances.splice(i, 1);\n}\nfunction findTargetIndex(instances, instance) {\n  var nextUpdateTime = instance.nextUpdateTime;\n  return binarySearch(instances, function (instance) {\n    if (instance.nextUpdateTime === nextUpdateTime) {\n      return 0;\n    } else if (instance.nextUpdateTime > nextUpdateTime) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["requestAnimationFrame","binarySearch","instances","add","instance","wasIdle","length","start","stop","remove","_this","forceUpdate","updateInstance","tick","now","Date","nextUpdateTime","scheduleNextTick","scheduledTick","_this2","cancel","_updateInstance","getNextValue","_instance$getNextValu2","value","setValue","i","findTargetIndex","splice","indexOf"],"sources":["D:\\git\\utube\\client\\node_modules\\react-time-ago\\source\\Updater.js"],"sourcesContent":["// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch.js'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}