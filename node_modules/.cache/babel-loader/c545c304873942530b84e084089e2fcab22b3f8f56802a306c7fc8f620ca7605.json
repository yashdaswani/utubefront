{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentUser: null,\n  loading: false,\n  error: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: state => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(state.currentUser.subscribedUsers.findIndex(channelId => channelId === action.payload), 1);\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  subscription\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","loading","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","subscription","subscribedUsers","includes","splice","findIndex","channelId","push","actions","reducer"],"sources":["D:/git/utube/client/src/components/redux/Userslice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n      loginStart: (state) => {\r\n        state.loading = true;\r\n      },\r\n      loginSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.currentUser = action.payload;\r\n      },\r\n      loginFailure: (state) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n      },\r\n      logout: (state) => {\r\n        state.currentUser = null;\r\n        state.loading = false;\r\n        state.error = false;\r\n      },\r\n      subscription: (state, action) => {\r\n        if (state.currentUser.subscribedUsers.includes(action.payload)) {\r\n          state.currentUser.subscribedUsers.splice(\r\n            state.currentUser.subscribedUsers.findIndex(\r\n              (channelId) => channelId === action.payload\r\n            ),\r\n            1\r\n          );\r\n        } else {\r\n          state.currentUser.subscribedUsers.push(action.payload);\r\n        }\r\n      },\r\n    },\r\n  });\r\n  \r\n  export const { loginStart, loginSuccess, loginFailure, logout, subscription } =\r\n    userSlice.actions;\r\n  \r\n  export default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB,CAAC;IACDO,YAAY,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,YAAY,EAAGJ,KAAK,IAAK;MACvBA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDU,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACP,WAAW,GAAG,IAAI;MACxBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,KAAK;IACrB,CAAC;IACDW,YAAY,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC/B,IAAIF,KAAK,CAACP,WAAW,CAACc,eAAe,CAACC,QAAQ,CAACN,MAAM,CAACC,OAAO,CAAC,EAAE;QAC9DH,KAAK,CAACP,WAAW,CAACc,eAAe,CAACE,MAAM,CACtCT,KAAK,CAACP,WAAW,CAACc,eAAe,CAACG,SAAS,CACxCC,SAAS,IAAKA,SAAS,KAAKT,MAAM,CAACC,OAAO,CAC5C,EACD,CAAC,CACF;MACH,CAAC,MAAM;QACLH,KAAK,CAACP,WAAW,CAACc,eAAe,CAACK,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC;MACxD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,UAAU;EAAEE,YAAY;EAAEG,YAAY;EAAEC,MAAM;EAAEC;AAAa,CAAC,GAC3EV,SAAS,CAACiB,OAAO;AAEnB,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}